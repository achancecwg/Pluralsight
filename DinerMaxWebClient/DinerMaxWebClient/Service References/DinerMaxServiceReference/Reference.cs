//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 14.0.23107.0
// 
namespace DinerMaxWebClient.DinerMaxServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/DinerMax3000ServiceWebRole")]
    public partial class Customer : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private string NameField;
        
        private string SurnameField;
        
        private System.Nullable<int> AgeField;
        
        private string CityField;
        
        private System.Nullable<bool> IsRegularCustomerField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<int> Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.Nullable<bool> IsRegularCustomer {
            get {
                return this.IsRegularCustomerField;
            }
            set {
                if ((this.IsRegularCustomerField.Equals(value) != true)) {
                    this.IsRegularCustomerField = value;
                    this.RaisePropertyChanged("IsRegularCustomer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DinerMaxServiceReference.IDinerMax3000Service")]
    public interface IDinerMax3000Service {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinerMax3000Service/addNewCustomer", ReplyAction="http://tempuri.org/IDinerMax3000Service/addNewCustomerResponse")]
        System.Threading.Tasks.Task<bool> addNewCustomerAsync(DinerMaxWebClient.DinerMaxServiceReference.Customer newCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinerMax3000Service/deleteCustomer", ReplyAction="http://tempuri.org/IDinerMax3000Service/deleteCustomerResponse")]
        System.Threading.Tasks.Task<bool> deleteCustomerAsync(int customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinerMax3000Service/modifyCustomer", ReplyAction="http://tempuri.org/IDinerMax3000Service/modifyCustomerResponse")]
        System.Threading.Tasks.Task<bool> modifyCustomerAsync(DinerMaxWebClient.DinerMaxServiceReference.Customer newCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinerMax3000Service/getCustomers", ReplyAction="http://tempuri.org/IDinerMax3000Service/getCustomersResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<DinerMaxWebClient.DinerMaxServiceReference.Customer>> getCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinerMax3000Service/BypassCertError", ReplyAction="http://tempuri.org/IDinerMax3000Service/BypassCertErrorResponse")]
        System.Threading.Tasks.Task BypassCertErrorAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDinerMax3000ServiceChannel : DinerMaxWebClient.DinerMaxServiceReference.IDinerMax3000Service, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DinerMax3000ServiceClient : System.ServiceModel.ClientBase<DinerMaxWebClient.DinerMaxServiceReference.IDinerMax3000Service>, DinerMaxWebClient.DinerMaxServiceReference.IDinerMax3000Service {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public DinerMax3000ServiceClient() : 
                base(DinerMax3000ServiceClient.GetDefaultBinding(), DinerMax3000ServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IDinerMax3000Service.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DinerMax3000ServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(DinerMax3000ServiceClient.GetBindingForEndpoint(endpointConfiguration), DinerMax3000ServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DinerMax3000ServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(DinerMax3000ServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DinerMax3000ServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(DinerMax3000ServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DinerMax3000ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<bool> addNewCustomerAsync(DinerMaxWebClient.DinerMaxServiceReference.Customer newCustomer) {
            return base.Channel.addNewCustomerAsync(newCustomer);
        }
        
        public System.Threading.Tasks.Task<bool> deleteCustomerAsync(int customerID) {
            return base.Channel.deleteCustomerAsync(customerID);
        }
        
        public System.Threading.Tasks.Task<bool> modifyCustomerAsync(DinerMaxWebClient.DinerMaxServiceReference.Customer newCustomer) {
            return base.Channel.modifyCustomerAsync(newCustomer);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<DinerMaxWebClient.DinerMaxServiceReference.Customer>> getCustomersAsync() {
            return base.Channel.getCustomersAsync();
        }
        
        public System.Threading.Tasks.Task BypassCertErrorAsync() {
            return base.Channel.BypassCertErrorAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IDinerMax3000Service)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IDinerMax3000Service)) {
                return new System.ServiceModel.EndpointAddress("https://dinermaxservice.cloudapp.net/DinerMax3000Service.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return DinerMax3000ServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IDinerMax3000Service);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return DinerMax3000ServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IDinerMax3000Service);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IDinerMax3000Service,
        }
    }
}
